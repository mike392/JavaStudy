package com.study.market.entity.impl;

import java.util.Comparator;
import java.util.Iterator;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.concurrent.TimeUnit;

import com.study.market.entity.Market;
import com.study.market.entity.Share;
import com.study.market.util.ColorConstants;
import com.study.market.util.Constants;

public class ShareMarketRunnable extends Market implements Runnable {
	private SortedSet<Share> refShares;
	@Override
	public void run() {
		while (true) {
		printSharePrices();
		}
	}
	
	private void printSharePrices() {
		SortedSet<Share> refShares = ShareMarket.getInstance().getShares();
		for (Share share : refShares){
			if (share.isIncreasing()){
				System.out.printf(ColorConstants.GREEN_PATTERN + "\n", share.getName(), share.getPrice());
			} else {
				System.out.printf(ColorConstants.RED_PATTERN + "\n", share.getName(), share.getPrice());
			}
		}
		System.out.println("---------------------------------------------------------------------------------");
		try {
			TimeUnit.MILLISECONDS.sleep(Constants.SLEEP_TIME);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}
